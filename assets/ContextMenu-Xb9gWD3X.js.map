{"version":3,"file":"ContextMenu-Xb9gWD3X.js","sources":["../../../lib/components/GpnContext/GpnContext.vue","../../src/Pages/ContextMenu.vue"],"sourcesContent":["<script setup lang=\"ts\">\n    import { computed, onMounted, ref } from \"vue\";\n    import type { PropType } from \"vue\";\n    import { ns } from \"../../utils/ns\";\n    import { Theme, ContextSize } from \"../../types\";\n    import { VirtualElement, offset, useFloating, autoUpdate, flip, size as fSize } from \"@floating-ui/vue\";\n    import { useClickOutside } from \"../../using\";\n    import { GpnScrollbar } from \"..\";\n\n    const props = defineProps({\n        theme: { type: String as PropType<Theme>, default: \"kp\" },\n        size: { type: String as PropType<ContextSize>, default: \"m\" },\n        maxHeight: { type: Number, default: 0 },\n        minWidth: { type: Number, default: 200 },\n        autoClose: {type: Boolean, default: false}\n    });\n\n    const contextElem = ref<HTMLElement>();\n    const innerContextElem = ref();\n    const isContextVisible = ref(false);\n    const virtualElem = ref<VirtualElement>();\n\n    useClickOutside(innerContextElem, hide);\n\n    const { floatingStyles } = useFloating(virtualElem, contextElem, {\n        placement: \"bottom-start\",\n        whileElementsMounted: autoUpdate,\n        middleware: [\n            flip({\n                crossAxis: true,\n            }),\n            offset(4),\n            fSize({\n                apply({ availableHeight, elements, availableWidth }) {\n                    const parentElemWidth = elements.reference.getBoundingClientRect().width;\n                    let width = parentElemWidth;\n                    if (props.minWidth > 0 && props.minWidth < availableWidth) {\n                        if (props.minWidth > parentElemWidth) width = props.minWidth;\n                        else width = parentElemWidth;\n                    } else {\n                        width = availableWidth;\n                    }\n                    Object.assign(elements.floating.style, {\n                        width: `${width}px`,\n                        maxHeight: `${(props.maxHeight > 0 && props.maxHeight < availableHeight ? props.maxHeight : availableHeight) - 10}px`,\n                    });\n                },\n            }),\n        ],\n        open: isContextVisible,\n    });\n\n    onMounted(() => {});\n\n    const classes = computed(() => {\n        const _ns = new ns(\"context\");\n        return [_ns.namespace(), _ns.block(props.size, \"size\"), `cv-theme-${props.theme}`];\n    });\n\n    function show(ev: PointerEvent) {\n        isContextVisible.value = !isContextVisible.value;\n        virtualElem.value = {\n            getBoundingClientRect() {\n                return (ev.target as Element).getBoundingClientRect();\n            },\n            contextElement: ev.target as Element,\n        };\n    }\n\n    function hide() {\n        isContextVisible.value = false;\n    }\n\n    const emit = defineEmits([\"click\"]);\n    function itemClick(item: unknown) {\n        if (props.autoClose) hide();\n        emit(\"click\", item);\n    }\n</script>\n\n<template>\n    <slot name=\"target\" :show=\"show\"></slot>\n    <GpnScrollbar v-if=\"isContextVisible\" ref=\"contextElem\" tag=\"div\" :class=\"classes\" :style=\"floatingStyles\" :options=\"{ wheelPropagation: false, suppressScrollX: true }\">\n        <div ref=\"innerContextElem\" class=\"cv-context--container\">\n            <slot :click=\"itemClick\">\n                <div>Nothing to show</div>\n            </slot>\n        </div>\n    </GpnScrollbar>\n</template>\n\n<style lang=\"scss\">\n    @import \"./styles/\";\n</style>\n","<script setup lang=\"ts\">\n    import { GpnButton, GpnContext, GpnList, type ListItem } from \"gpn-ui-dev\";\n    import { useGlobalStore } from \"../stores/store\";\n    import { ref } from \"vue\";\n\n    const store = useGlobalStore();\n    const menuItems = ref<ListItem[]>([\n        {\n            id: 1,\n            name: \"Пункт 1\",\n        },\n        {\n            id: 2,\n            name: \"Погасить кредит досрочно\",\n        },\n        {\n            id: 3,\n            name: \"Взять много денег по большие проценты и не отдавать\",\n        },\n        {\n            id: 4,\n            name: \"Погасить кредит досрочно\",\n        },\n        {\n            id: 5,\n            name: \"Погасить кредит досрочно\",\n        },\n        {\n            id: 6,\n            name: \"Погасить кредит досрочно\",\n        },\n        {\n            id: 7,\n            name: \"Погасить кредит досрочно\",\n        },\n        {\n            id: 8,\n            name: \"Погасить кредит досрочно\",\n        },\n    ]);\n\n    const onMenuClick = () => {\n        console.log(123)\n    }\n</script>\n\n<template>\n    <h2>Context menu</h2>\n    <div class=\"grid\">\n        <h5>Size</h5>\n        <div>XXL</div>\n        <div>XL</div>\n        <div>L</div>\n        <div>M</div>\n        <div>S</div>\n        <div>XS</div>\n\n        <h5>default</h5>\n        <GpnContext @click=\"onMenuClick\" auto-close>\n            <template #target=\"{ show }\">\n                <GpnButton size=\"xxl\" icon-left=\"bi-three-dots\" only-icon :theme=\"store.theme\" @click=\"show\" />\n            </template>\n            <template #default=\"{click}\">\n                <GpnList :items=\"menuItems\" is-clickable :theme=\"store.theme\" size=\"xxl\" @click=\"click\" />\n            </template>\n        </GpnContext>\n        <GpnContext>\n            <template #target=\"{ show }\">\n                <GpnButton size=\"xl\" icon-right=\"bi-chevron-down\" label=\"Доп действия с пунктом меню\" :theme=\"store.theme\" @click=\"show\" />\n            </template>\n            <GpnList :items=\"menuItems\" is-clickable :theme=\"store.theme\" size=\"xl\" />\n        </GpnContext>\n        <GpnContext>\n            <template #target=\"{ show }\">\n                <GpnButton size=\"l\" icon-right=\"bi-chevron-down\" label=\"Доп действия\" :theme=\"store.theme\" @click=\"show\" />\n            </template>\n            <GpnList :items=\"menuItems\" is-clickable :theme=\"store.theme\" size=\"l\" />\n        </GpnContext>\n        <GpnContext>\n            <template #target=\"{ show }\">\n                <GpnButton size=\"m\" icon-right=\"bi-chevron-down\" label=\"Доп действия\" :theme=\"store.theme\" @click=\"show\" />\n            </template>\n            <GpnList :items=\"menuItems\" is-clickable :theme=\"store.theme\" size=\"m\" />\n        </GpnContext>\n        <GpnContext>\n            <template #target=\"{ show }\">\n                <GpnButton size=\"s\" icon-right=\"bi-chevron-down\" label=\"Доп действия\" :theme=\"store.theme\" @click=\"show\" />\n            </template>\n            <GpnList :items=\"menuItems\" is-clickable :theme=\"store.theme\" size=\"s\" />\n        </GpnContext>\n        <GpnContext>\n            <template #target=\"{ show }\">\n                <GpnButton size=\"xs\" icon-right=\"bi-chevron-down\" label=\"Доп действия\" :theme=\"store.theme\" @click=\"show\" />\n            </template>\n            <GpnList :items=\"menuItems\" is-clickable :theme=\"store.theme\" size=\"xs\" />\n        </GpnContext>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    .grid {\n        display: grid;\n        grid-template-columns: 90px 1fr 10px;\n        grid-template-rows: repeat(7, 1fr);\n        grid-auto-flow: column;\n        gap: 16px;\n        align-items: center;\n        margin-bottom: 48px;\n    }\n    .grid-2 {\n        display: grid;\n        grid-template-columns: 90px repeat(7, 1fr) 10px;\n        grid-template-rows: repeat(3, 1fr);\n        grid-auto-flow: column;\n        gap: 16px;\n        align-items: center;\n        margin-bottom: 48px;\n    }\n    .cloud {\n        width: 320px;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 4px;\n    }\n    .cloud-row {\n        margin: 20px 0;\n        width: 320px;\n        display: flex;\n        flex-direction: column;\n        gap: 4px;\n    }\n    h5 {\n        color: #2f5e7b;\n        font-size: 12px;\n    }\n</style>\n"],"names":["props","__props","contextElem","ref","innerContextElem","isContextVisible","virtualElem","useClickOutside","hide","floatingStyles","useFloating","autoUpdate","flip","offset","fSize","availableHeight","elements","availableWidth","parentElemWidth","width","onMounted","classes","computed","_ns","ns","show","ev","emit","__emit","itemClick","item","store","useGlobalStore","menuItems","onMenuClick"],"mappings":"8oBASI,MAAMA,EAAQC,EAQRC,EAAcC,IACdC,EAAmBD,IACnBE,EAAmBF,EAAI,EAAK,EAC5BG,EAAcH,IAEpBI,EAAgBH,EAAkBI,CAAI,EAEtC,KAAM,CAAE,eAAAC,CAAmB,EAAAC,EAAYJ,EAAaJ,EAAa,CAC7D,UAAW,eACX,qBAAsBS,EACtB,WAAY,CACRC,EAAK,CACD,UAAW,EAAA,CACd,EACDC,EAAO,CAAC,EACRC,EAAM,CACF,MAAM,CAAE,gBAAAC,EAAiB,SAAAC,EAAU,eAAAC,GAAkB,CACjD,MAAMC,EAAkBF,EAAS,UAAU,sBAAA,EAAwB,MACnE,IAAIG,EAAQD,EACRlB,EAAM,SAAW,GAAKA,EAAM,SAAWiB,EACnCjB,EAAM,SAAWkB,EAAiBC,EAAQnB,EAAM,SACvCmB,EAAAD,EAELC,EAAAF,EAEL,OAAA,OAAOD,EAAS,SAAS,MAAO,CACnC,MAAO,GAAGG,CAAK,KACf,UAAW,IAAInB,EAAM,UAAY,GAAKA,EAAM,UAAYe,EAAkBf,EAAM,UAAYe,GAAmB,EAAE,IAAA,CACpH,CACL,CAAA,CACH,CACL,EACA,KAAMV,CAAA,CACT,EAEDe,EAAU,IAAM,CAAA,CAAE,EAEZ,MAAAC,EAAUC,EAAS,IAAM,CACrB,MAAAC,EAAM,IAAIC,EAAG,SAAS,EAC5B,MAAO,CAACD,EAAI,UAAU,EAAGA,EAAI,MAAMvB,EAAM,KAAM,MAAM,EAAG,YAAYA,EAAM,KAAK,EAAE,CAAA,CACpF,EAED,SAASyB,EAAKC,EAAkB,CACXrB,EAAA,MAAQ,CAACA,EAAiB,MAC3CC,EAAY,MAAQ,CAChB,uBAAwB,CACZ,OAAAoB,EAAG,OAAmB,uBAClC,EACA,eAAgBA,EAAG,MAAA,CAE3B,CAEA,SAASlB,GAAO,CACZH,EAAiB,MAAQ,EAC7B,CAEA,MAAMsB,EAAOC,EACb,SAASC,EAAUC,EAAe,CAC1B9B,EAAM,WAAgBQ,IAC1BmB,EAAK,QAASG,CAAI,CACtB,2wBCxEA,MAAMC,EAAQC,IACRC,EAAY9B,EAAgB,CAC9B,CACI,GAAI,EACJ,KAAM,SACV,EACA,CACI,GAAI,EACJ,KAAM,0BACV,EACA,CACI,GAAI,EACJ,KAAM,qDACV,EACA,CACI,GAAI,EACJ,KAAM,0BACV,EACA,CACI,GAAI,EACJ,KAAM,0BACV,EACA,CACI,GAAI,EACJ,KAAM,0BACV,EACA,CACI,GAAI,EACJ,KAAM,0BACV,EACA,CACI,GAAI,EACJ,KAAM,0BACV,CAAA,CACH,EAEK+B,EAAc,IAAM,CACtB,QAAQ,IAAI,GAAG,CAAA"}